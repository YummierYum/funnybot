{"ast":null,"code":"import axios from \"axios\";\nimport { initialFormState } from \"../App\";\nfunction DiscordService(setFormData) {\n  const Send = async data => {\n    const body = {\n      content: \"Message Received\",\n      tts: false,\n      color: \"white\",\n      embeds: [{\n        title: \"ContactForm\",\n        description: data\n      }]\n    };\n    try {\n      const data = await axios.post(\"https://discord.com/api/webhooks/1204347961786634270/K0gJpdDZ4XD3s0Xv8Ct1zCT-JIwy3Ksp5v352APqTj0YRiXS8ns_-m7SphwCQ4T8xx8X\", body);\n      console.log(data);\n      setFormData(initialFormState);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return {\n    Send\n  };\n}\n_c = DiscordService;\nexport default DiscordService;\nvar _c;\n$RefreshReg$(_c, \"DiscordService\");","map":{"version":3,"names":["axios","initialFormState","DiscordService","setFormData","Send","data","body","content","tts","color","embeds","title","description","post","console","log","err","error","_c","$RefreshReg$"],"sources":["/Users/tylerkubecka/discordbot/botsite/botapp/src/services/DiscordServices.js"],"sourcesContent":["import axios from \"axios\";\nimport { initialFormState } from \"../App\";\n\nfunction DiscordService(setFormData) {\n\n    const Send = async (data) => {\n        const body = {\n            content: \"Message Received\",\n            tts: false,\n            color: \"white\",\n            embeds: [\n                {\n                    title: \"ContactForm\",\n                    description: data,\n                },\n            ],\n        };\n\n        try {\n           const data = await axios.post(\n            \"https://discord.com/api/webhooks/1204347961786634270/K0gJpdDZ4XD3s0Xv8Ct1zCT-JIwy3Ksp5v352APqTj0YRiXS8ns_-m7SphwCQ4T8xx8X\",\n            body\n            );\n            console.log(data);\n            setFormData(initialFormState);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    return {\n        Send,\n    };\n}\n\nexport default DiscordService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,QAAQ;AAEzC,SAASC,cAAcA,CAACC,WAAW,EAAE;EAEjC,MAAMC,IAAI,GAAG,MAAOC,IAAI,IAAK;IACzB,MAAMC,IAAI,GAAG;MACTC,OAAO,EAAE,kBAAkB;MAC3BC,GAAG,EAAE,KAAK;MACVC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,CACJ;QACIC,KAAK,EAAE,aAAa;QACpBC,WAAW,EAAEP;MACjB,CAAC;IAET,CAAC;IAED,IAAI;MACD,MAAMA,IAAI,GAAG,MAAML,KAAK,CAACa,IAAI,CAC5B,2HAA2H,EAC3HP,IACA,CAAC;MACDQ,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;MACjBF,WAAW,CAACF,gBAAgB,CAAC;IACjC,CAAC,CAAC,OAAOe,GAAG,EAAE;MACVF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;IACtB;EACJ,CAAC;EACD,OAAO;IACHZ;EACJ,CAAC;AACL;AAACc,EAAA,GA7BQhB,cAAc;AA+BvB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}